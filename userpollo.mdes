# Usuario está muy pollo - Guía Completa Actualizada

Este archivo está diseñado para orientar a personas que, aunque estén avanzando en la instalación de Gentoo o explorando sistemas Linux desde cero, reconocen que aún están "pollos" (novatos) en varios conceptos clave.

**ACTUALIZADO**: Incluye lecciones específicas del proceso de instalación hasta el punto de kernel compilado.

---

## ❄️ **Fundamentos que deberías dominar pronto**

### ✏️ **Archivos y estructura de Linux**

* Diferencia entre `/etc`, `/usr`, `/var`, `/dev`, `/proc`, `/sys`, `/run`, `/mnt`, `/boot`
* Qué es un archivo de configuración (`.conf`, `.gen`, `.service`)
* Entender qué es un "symlink" (`ln -s`)

### ⚡ **Montaje de sistemas**

* `mount`, `umount`, `lsblk`, `blkid`, `df -h`
* Cuándo se monta `proc`, `sys`, `dev`, `run` y por qué
* Por qué un `chroot` necesita esos sistemas virtuales montados

### ⚙️ **Portage y el ecosistema Gentoo**

* `emerge`, `eselect`, `genkernel`, `USE flags`
* Dónde vive la información de los paquetes (`/var/db/repos/gentoo`, `/etc/portage/`)
* Qué es un "stage3", "profile", "ebuild"

### 🌐 **Red y sincronización**

* `emerge --sync`, `emerge-webrsync`, claves GPG, mirrors
* Problemas comunes con `setlocale`, errores de `SYNC`, `make.conf`

---

## 🧠 **Conceptos Críticos - Nivel "Ya llegamos hasta aquí"**

### 🐍 **¿Por qué Python apareció de la nada?**
**IMPORTANTE**: NO estás programando en Python, pero:
- `genkernel` está escrito en Python
- `portage` usa Python extensivamente
- Scripts de configuración usan Python
- **Es normal** que pida dependencias Python (`python_targets_python3_11`)

### 📦 **¿Qué significa "emerge" realmente?**
- ❌ **NO** es como `apt install` (descarga binario precompilado)
- ✅ **SÍ** compila desde código fuente 
- Por eso tarda tanto y usa tanto CPU
- Por eso necesita configurar `MAKEOPTS="-j20"` para 20 cores

### 🔄 **Diferencia crítica: sistema anfitrión vs target**
- **Arch (pendrive)** = donde ejecutas comandos de montaje
- **Gentoo (chroot)** = donde se instala todo
- **NUNCA confundirlos** - siempre pregúntate: "¿Estoy en Arch o en Gentoo?"

### ⚙️ **¿Qué hace genkernel que es tan especial?**
- **Kernel** = cerebro del sistema operativo
- Sin kernel Gentoo = no arranca Gentoo
- `genkernel all` = construye TODO el cerebro desde cero (por eso tarda tanto)
- **99% CPU durante 30-60 minutos = NORMAL**

### 🔐 **¿Por qué tantos errores de licencias y configuración?**
- Gentoo respeta licencias estrictamente
- Cada paquete puede necesitar configuración específica
- `--autounmask-write` y `etc-update` son herramientas normales, no errores

---

## 🔧 **Herramientas básicas para dominar**

* `nano`, `cp`, `mv`, `ls`, `tree`, `grep`, `cat`, `echo`, `chmod`, `chown`
* `sudo`, `su`, `passwd`, `whoami`
* `cd`, `pwd`, `mkdir`, `rm`, `rmdir`
* `bash`, `./script.sh`, variables de entorno `$VAR`, export

---

## ☑ **Habilidades que ya deberías tener a este punto**

### 📊 **Leer outputs largos sin pánico**
- Outputs de `emerge` con cientos de líneas = NORMAL
- Errores de dependencias Python = SOLUCIONABLE
- Compilación de kernel con 99% CPU = ESPERADO

### ⏰ **Esperar compilaciones largas**
- `emerge genkernel` = 10-20 minutos
- `genkernel all` = 30-60 minutos
- **NO todo es instantáneo** como en distribuciones binarias

### 🎯 **Confiar en el proceso**
- No necesitas entender cada línea del output
- Si progresa y no dice "failed", está bien
- **Gentoo es verboso** = muestra todo lo que hace

### 🕵️ **Diagnosticar antes de actuar**
- Verificar estado actual antes de ejecutar comandos
- `ls /boot/`, `eselect kernel list`, `df -h`
- **Evitar repetir trabajo costoso**

---

## 🚨 **Red flags para detectar**

### ⚡ **Problemas de tiempo**
- Si un comando tarda 0.1 segundos = algo malo pasó
- Si no hay output por 10+ minutos = algo se colgó  
- Si compilation termina en 2 minutos = algo falló

### ❌ **Errores críticos**
- Si dice "failed" o "error" = PARAR y analizar
- Si dice "masked" = problema de licencias o configuración
- Si dice "blocked" = conflicto de dependencias

### 💾 **Problemas de espacio**
- Si queda menos de 5GB libre = peligro
- Si `/tmp` se llena durante compilación = problema

---

## 🏆 **Logros desbloqueados a este punto**

### ✅ **Ya tienes dominado:**
- Montar y desmontar sistemas de archivos
- Entrar y salir de chroot correctamente
- Aplicar configuraciones sin romper el sistema
- Resolver errores de licencias y dependencias
- Compilar un kernel completo desde cero
- Manejar outputs largos sin desesperarte

### 🎯 **Próximos desafíos:**
- Configurar fstab correctamente
- Configurar red y servicios
- Hacer el primer boot exitoso
- Configurar entorno gráfico

---

## 💭 **Errores comunes que YA superaste**

### 🔐 **Error de licencias de firmware**
```
!!! All ebuilds that could satisfy "sys-kernel/linux-firmware" have been masked.
```
**Solución aprendida**: `ACCEPT_LICENSE="linux-fw-redistributable"`

### 🐍 **Error de Python targets**
```
The following USE changes are necessary to proceed:
>=dev-python/gpep517-19 python_targets_python3_11
```
**Solución aprendida**: `emerge --autounmask-write` + `etc-update`

### 🌐 **Warnings de locale**
```
setlocale: LC_ALL: cannot change locale (en_US.UTF-8)
```
**Solución aprendida**: Configurar `/etc/locale.gen` + `locale-gen` + `eselect locale`

---

## 📚 **Lecturas recomendadas**

* Gentoo Handbook: [https://wiki.gentoo.org/wiki/Handbook:Main_Page](https://wiki.gentoo.org/wiki/Handbook:Main_Page)
* Guía sobre Portage: [https://wiki.gentoo.org/wiki/Portage](https://wiki.gentoo.org/wiki/Portage)
* Conceptos de chroot: [https://wiki.gentoo.org/wiki/Chroot](https://wiki.gentoo.org/wiki/Chroot)
* Árbol de directorios en Linux: [https://wiki.archlinux.org/title/Filesystem_Hierarchy_Standard](https://wiki.archlinux.org/title/Filesystem_Hierarchy_Standard)
* Guía de uso de bash para scripts: [https://linuxconfig.org/bash-scripting-tutorial-for-beginners](https://linuxconfig.org/bash-scripting-tutorial-for-beginners)

---

## 🧐 **Sugerencias para seguir avanzando**

* No temas equivocarte, pero documenta lo que hiciste
* Pregúntate siempre: "¿Esto lo hice en Arch o en Gentoo (chroot)?"
* Si algo falla, no borres nada sin antes inspeccionar
* Usa comandos como `tree`, `ls -l`, `cat` y `echo` para ver, no para cambiar
* Repite los pasos exitosos como scripts
* **NUEVO**: Siempre verifica estado actual antes de ejecutar comandos costosos

---

## 🎓 **Nivel actual desbloqueado: "Kernel Master"**

**Has logrado:**
- Compilar un kernel Linux desde cero ✅
- Resolver conflictos de dependencias complejas ✅
- Manejar herramientas de bajo nivel de Gentoo ✅
- Entender la diferencia entre sistema anfitrión y target ✅

**Próximo nivel**: "System Administrator" - configurar servicios y hacer boot

---

Este archivo crecerá contigo. Agrégale tus propios errores y aprendizajes. ¡Ya no eres tan pollo como cuando empezaste! 🐣→🐔
